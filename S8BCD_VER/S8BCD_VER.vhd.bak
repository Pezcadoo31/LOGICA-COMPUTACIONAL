--

Library IEEE;
Use IEEE.std_logic_1164.all;

Entity S8BCD_VER is 
	port (	Dato : in std_logic_vector (7 downto 0);
				Sel : in std_logic_vector (1 downto 0);
				SALIDA: out 20 downto 0);
	end S8BCD_VER;
	
Architecture arc of S8BCD_VER is

component BCD_CODER  IS
	PORT (	BCD : IN Std_logic_vector (3 downto 0);
				Seg : out std_logic_vector (3 downto 0));
end COMponent BCD_CODER;

Component BIN2BCD is
	Port  (	BIN : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
				BCD: OUT STD_LOGIC_VECTOR (3 DOWNTO 0));
END component BIN2BCD;

Component S4BCD is 
	port (	X, Y : in std_logic_vector (3 downto 0);
				Cin : in std_logic;
				Cout : out std_logic ;
				S : out std_logic_vector (3 downto 0));
end component S4BCD;

signal BCD : std_LOGIC_VECTOR (7 dowNTO 0);
signal BIN : std_LOGIC_VECTOR (11 dowNTO 0);
signal A, B : std_LOGIC_VECTOR (7 dowNTO 0);
Signal C: std_LOGIC_VECTOR (1 dowNTO 0);

begin 
	
	I0 : BIN2BCD port map (Dato (3 dowNTO 0), BCD (3 DOWNTO 0)); 
	I1 : BIN2BCD port map (Dato (7 dowNTO 4), BCD (7 DOWNTO 4));
	
	Process (Sel) 
		begin 
			if Sel(0) = '1' then 
				A <= BCD;
			elsif Sel (1) = '1' then 
				B <= BCD;
			end if;
	end process;
	
	I2 : S4BCD port map (A(3 dowNTO 0), B(3 DOWNTO 0), '0', C(0), BIN (3 DOWNTO 0) );
	I3 : S4BCD port map (A(7 DOWNTO 4), B(7 DOWNTO 0), C(0), C(1), BIN (7 DOWNTO 4));
	I4 : S4BCD port map ("0000", "0000", C(1), '0', BIN(11 DOWNTO 8));
	
	I5 : BCD_CODER port map (BIN(3 DOWNTO 0), SALIDA (6 DOWNTO 0) );
	I6 : BCD_CODER port map (BIN(7 DOWNTO 4), SALIDA (13 DOWNTO 7) );
	I7 : BCD_CODER port map (BIN(11 DOWNTO 8), SALIDA (20 DOWNTO 14) );

END arc;
		

